#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Sep 18 19:44:27 2021

@author: gmarzik
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy.signal as sig
import matplotlib
import tikzplotlib
from mpl_toolkits.axes_grid1 import make_axes_locatable
import soundfile as sf

matplotlib.style.use('default')
matplotlib.rcParams.update({'font.size': 12})
matplotlib.use("pgf")
matplotlib.rcParams.update({
    "pgf.texsystem": "pdflatex",
    'font.family': 'serif',
    'text.usetex': True,
    'pgf.rcfonts': False,
})

# #%%
# #Tren de impulsos
# imp = sig.unit_impulse(100, [10,20,30,40,50,60,70,80,90])
# m = np.arange(start=-50,stop=50)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# plt.plot(m,np.zeros(len(m)),color='black')
# (markers, stemlines, baseline) = ax.stem(m[10:11],imp[10:11],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[20:21],imp[20:21],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[30:31],imp[30:31],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[40:41],imp[40:41],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[50:51],imp[50:51],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[60:61],imp[60:61],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[70:71],imp[70:71],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[80:81],imp[80:81],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[90:91],imp[90:91],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# ax.set_xlabel('Muestras')
# ax.set_ylabel('Amplitud')
# ax.set_xticks(ticks=[-40,-30,-20,-10,0,10,20,30,40])
# tikzplotlib.save("deltas.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('deltas.pgf')
# #%%
# window = sig.triang(5)
# spec = np.zeros(100)
# spec[48:53] = window
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(m,spec,color='black')
# ax.set_xlabel('Muestras')
# ax.set_ylabel('Amplitud')
# ax.set_xticks(ticks=[-40,-30,-20,-10,0,10,20,30,40])
# tikzplotlib.save("espectro_continuo.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('espectro_continuo.pgf')
# #%%
# test = sig.fftconvolve(spec,imp)
# alias = test[50:150]
# alias = alias - spec
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(m[:47],alias[:47],'--',color='black')
# ax.plot(m[54:],alias[54:],'--',color='black')
# ax.plot(m[47:54],spec[47:54],color='black')
# (markers, stemlines, baseline) = ax.stem(m[10:11],imp[10:11],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[20:21],imp[20:21],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[30:31],imp[30:31],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[40:41],imp[40:41],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[50:51],imp[50:51],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[60:61],imp[60:61],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[70:71],imp[70:71],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[80:81],imp[80:81],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[90:91],imp[90:91],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" )
# plt.setp(markers, color="black" )
# ax.plot(m[:48],np.zeros(48),color='black')
# ax.plot(m[53:],np.zeros(47),color='black')
# ax.fill_between(m[47:54],spec[47:54], color='grey')
# ax.set_xlabel('Muestras')
# ax.set_ylabel('Amplitud')
# ax.set_xticks(ticks=[-40,-30,-20,-10,0,10,20,30,40])
# tikzplotlib.save("alias.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('alias.pgf')
# #%%
# window_alias = sig.triang(21)
# spec_alias_orig = np.zeros(100)
# spec_alias_1 = np.zeros(100)
# spec_alias_2 = np.zeros(100)
# spec_alias_3 = np.zeros(100)
# spec_alias_4 = np.zeros(100)
# spec_alias_5 = np.zeros(100)
# spec_alias_6 = np.zeros(100)
# spec_alias_7 = np.zeros(100)
# spec_alias_8 = np.zeros(100)
# spec_alias_orig[40:61] = window_alias
# spec_alias_1[0:21] = window_alias
# spec_alias_2[10:31] = window_alias
# spec_alias_3[20:41] = window_alias
# spec_alias_4[30:51] = window_alias
# spec_alias_5[50:71] = window_alias
# spec_alias_6[60:81] = window_alias
# spec_alias_7[70:91] = window_alias
# spec_alias_8[80:] = window_alias[:-1]
# error_1 = np.minimum(spec_alias_orig,spec_alias_4)
# error_2 = np.minimum(spec_alias_orig,spec_alias_5)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(m[39:62],spec_alias_orig[39:62],color='black')
# ax.plot(m[0:22],spec_alias_1[0:22],color='black',linestyle='--',linewidth=0.6)
# ax.plot(m[9:32],spec_alias_2[9:32],color='black',linestyle='--',linewidth=0.6)
# ax.plot(m[19:42],spec_alias_3[19:42],color='black',linestyle='--',linewidth=0.6)
# ax.plot(m[29:52],spec_alias_4[29:52],color='black',linestyle='--',linewidth=0.6)
# ax.plot(m[49:72],spec_alias_5[49:72],color='black',linestyle='--',linewidth=0.6)
# ax.plot(m[59:82],spec_alias_6[59:82],color='black',linestyle='--',linewidth=0.6)
# ax.plot(m[69:92],spec_alias_7[69:92],color='black',linestyle='--',linewidth=0.6)
# ax.plot(m[79:],spec_alias_8[79:],color='black',linestyle='--',linewidth=0.6)
# (markers, stemlines, baseline) = ax.stem(m[10:11],imp[10:11],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[20:21],imp[20:21],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[30:31],imp[30:31],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[40:41],imp[40:41],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[50:51],imp[50:51],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[60:61],imp[60:61],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[70:71],imp[70:71],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[80:81],imp[80:81],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# (markers, stemlines, baseline) = ax.stem(m[90:91],imp[90:91],markerfmt=('^'),basefmt=' ')
# plt.setp(stemlines, linestyle="-", color="black" ,linewidth=0.6)
# plt.setp(markers, color="black" )
# ax.fill_between(m[39:51], error_1[39:51], alpha=.5,color='C0')
# ax.fill_between(m[50:62], error_2[50:62], alpha=.5,color='C0')
# ax.set_xlabel('Muestras')
# ax.set_ylabel('Amplitud')
# ax.set_xticks(ticks=[-40,-30,-20,-10,0,10,20,30,40])
# tikzplotlib.save("aliasing.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('aliasing.pgf')
# #%%
# fs=44100
# t=np.arange(start=0,stop=1,step=(1/fs))
# f = 1000
# seno = np.sin(2*np.pi*f*t)
# seno_f = np.abs(np.fft.rfft(seno))
# f = np.arange(0,fs/2,step=1)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(t[:150],seno[:150],color='black')
# ax.set_xlabel('Tiempo [s]')
# ax.set_ylabel('Amplitud')
# tikzplotlib.save("seno.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('seno.pgf')
# ax.plot(f,seno_f[:-1],color='black')
# ax.set_xlabel('Frecuencia [Hz]')
# ax.set_ylabel('|X[k]|')
# tikzplotlib.save("seno_frec.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('seno_frec.pgf')
# #%%
# vent_rect = np.zeros(500)
# vent_rect[:10] = np.ones(10)
# vent_rect_f = np.abs(np.fft.rfft(vent_rect))
# fs = 500
# f = np.arange(0,fs/2,step=1)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(f,vent_rect_f[:-1]/np.max(vent_rect_f), color='black')
# ax.set_xlabel('Frecuencia [Hz]')
# ax.set_ylabel('|X[k]|')
# tikzplotlib.save("ventana_rect_f.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('ventana_rect_f.pgf')
# #%%
# cola_1 = np.zeros(96)
# cola_2 = np.zeros(96)
# cola_3 = np.zeros(96)
# cola_4 = np.zeros(96)
# cola_5 = np.zeros(96)
# cola_full = np.ones(96)
# t = np.arange(0,96)
# cola_1[:32] = np.hanning(32)
# cola_2[16:48] = np.hanning(32)
# cola_3[32:64] = np.hanning(32)
# cola_4[48:80] = np.hanning(32)
# cola_5[64:96] = np.hanning(32)
# cola_full[:16] = cola_1[:16]
# cola_full[80:] = cola_5[80:]
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(t[:33],cola_1[:33],color='black',linestyle='--',linewidth=0.7)
# ax.plot(t[16:49],cola_2[16:49],color='black',linestyle='--',linewidth=0.7)
# ax.plot(t[32:65],cola_3[32:65],color='black',linestyle='--',linewidth=0.7)
# ax.plot(t[48:80],cola_4[48:80],color='black',linestyle='--',linewidth=0.7)
# ax.plot(t[64:96],cola_5[64:96],color='black',linestyle='--',linewidth=0.7)
# ax.plot(t,cola_full,color='black')
# ax.set_xlabel('Muestras')
# ax.set_ylabel('Amplitud')
# tikzplotlib.save("criterio_cola.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('criterio_cola.pgf')
# #%%
# imp = 30*sig.unit_impulse(40, [0,10,20,30,39])
# const_0 = np.zeros(40)
# const_1 = 10*np.ones(40)
# const_2 = 20*np.ones(40)
# const_3 = 30*np.ones(40)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(const_0,color='black')
# ax.plot(const_1,color='black')
# ax.plot(const_2,color='black')
# ax.plot(const_3,color='black')
# (markers, stemlines, baseline) = ax.stem(imp,markerfmt=' ',basefmt=' ')
# plt.setp(stemlines,color="black")
# ax.set_xticks([])
# ax.set_yticks([])
# ax.set_xlabel('Tiempo [s]')
# ax.set_ylabel('Frecuencia [Hz]')
# tikzplotlib.save("stft_freq_tilling.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('stft_freq_tilling.pgf')
# #%%
# imp_1 = 30*sig.unit_impulse(40, [0,20,39])
# imp_2 = 25*sig.unit_impulse(40,[10,30])
# imp_3 = 15*sig.unit_impulse(40,[5,15,25,35])
# const_0 = np.zeros(40)
# const_1 = 15*np.ones(40)
# const_2 = 25*np.ones(40)
# const_3 = 30*np.ones(40)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(const_0,color='black')
# ax.plot(const_1,color='black')
# ax.plot(const_2,color='black')
# ax.plot(const_3,color='black')
# (markers, stemlines, baseline) = ax.stem(imp_1,markerfmt=' ',basefmt=' ')
# plt.setp(stemlines,color="black")
# (markers, stemlines, baseline) = ax.stem(imp_2,markerfmt=' ',basefmt=' ')
# plt.setp(stemlines,color="black")
# (markers, stemlines, baseline) = ax.stem(imp_3,markerfmt=' ',basefmt=' ')
# plt.setp(stemlines,color="black")
# ax.set_xticks([])
# ax.set_yticks([])
# ax.set_xlabel('Tiempo [s]')
# ax.set_ylabel('Frecuencia [Hz]')
# tikzplotlib.save("wavelet_freq_tilling.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('wavelet_freq_tilling.pgf')
# #%%
# tono,fs = sf.read('tono.wav')
# t = np.arange(0,len(tono)//fs,step=1/fs)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(t[:100],tono[:100],color='black')
# ax.set_xlabel('Tiempo [s]')
# ax.set_ylabel('Amplitud')
# tikzplotlib.save("tono.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('tono.pgf')
# #%%
# musica,fs = sf.read('musica.wav')
# t = np.arange(0,len(musica)//fs,step=1/fs)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(t,musica/np.max(musica),color='black')
# ax.set_xlabel('Tiempo [s]')
# ax.set_ylabel('Amplitud')
# tikzplotlib.save("musica.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('musica.pgf')
# #%%
# sweep,fs = sf.read('sweep.wav')
# t = np.arange(0,len(sweep)//fs,step=1/fs)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(t[:100000],sweep[:100000]/np.max(sweep),color='black')
# ax.set_xlabel('Tiempo [s]')
# ax.set_ylabel('Amplitud')
# tikzplotlib.save("sweep.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('sweep.pgf')
# #%%
# musica,fs = sf.read('musica.wav')
# t = np.arange(0,len(musica)//fs,step=1/fs)
# raw = np.column_stack((t, musica))
# np.savetxt("rawdata.dat", raw)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(t,musica/np.max(musica),color='black')
# ax.set_xlabel('Tiempo [s]')
# ax.set_ylabel('Amplitud')
# tikzplotlib.save("musica.tex", axis_width='12cm', axis_height='9cm')
# #%%
# habla,fs = sf.read('habla.wav')
# t = np.arange(0,len(habla)/fs,step=1/fs)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.plot(t,habla/np.max(habla),color='black')
# ax.set_xlabel('Tiempo [s]')
# ax.set_ylabel('Amplitud')
# tikzplotlib.save("habla.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('habla.pgf')
# #%%
# with open('histogramas.npy', 'rb') as f:
#     val_min = np.load(f)
#     val_max = np.load(f)
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.hist(val_min, 20, density=False, facecolor='black', alpha=1)
# ax.set_xlabel('Nivel [dB]')
# ax.set_ylabel('Frecuencia de aparición')
# tikzplotlib.save("val_min_hist.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('val_min_hist.pgf')
# fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
# ax.hist(val_max, 20, density=False, facecolor='black', alpha=1)
# ax.set_xlabel('Nivel [dB]')
# ax.set_ylabel('Frecuencia de aparición')
# tikzplotlib.save("val_max_hist.tex", axis_width='12cm', axis_height='9cm')
# plt.savefig('val_max_hist.pgf')
#%%
Xorig_2 = plt.imread('cerebro.jpeg')
x_fft = 10*np.log10(np.abs(np.fft.fft2(Xorig_2,norm='ortho')))
fig,ax = plt.subplots(figsize=(7,5)  , dpi=80)
im = ax.imshow(x_fft,cmap='gist_gray')

ax.set_xlabel('Frecuencia espacial')
ax.set_ylabel('Frecuencia espacial')
divider = make_axes_locatable(ax)
cax = divider.append_axes('right', size='5%', pad=0.15)
fig.colorbar(im, cax=cax, orientation='vertical',label='Amplitud [dB]',cmap='gist_gray')
plt.savefig('imagen_f.pgf')
